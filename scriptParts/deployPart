
genericDeploy(){  
  ssh $HOST_USER@$HOST "$BIN/wsadmin.sh -lang jython -user $USER -password $PASS -c \"AdminApp.update('$1', 'app', '[ -operation update -contents $2 -nopreCompileJSPs -installed.ear.destination \\\$(APP_INSTALL_ROOT)/$CELL -distributeApp -nouseMetaDataFromBinary -nodeployejb -createMBeansForResources -noreloadEnabled -nodeployws -validateinstall warn -noprocessEmbeddedConfig -filepermission .*\.dll=755#.*\.so=755#.*\.a=755#.*\.sl=755 -noallowDispatchRemoteInclude -noallowServiceRemoteInclude -asyncRequestDispatchType DISABLED -nouseAutoLink -noenableClientModule -clientMode isolated -novalidateSchema $3]' ) \"" 
}

genericPreDeploy(){

  echo "- UPLOADING ${1}"
  upload "$ISIS_DEVEL/${1}" "$EAR_REMOTE_DIR/${2}"

  local modulesToServersName=("${!4}")
  local modulesToServersValues=("${!5}")
  
  local finalMapForIBM="-MapModulesToServers [";
  local hostingMap="";
  for (( t=0; t<${#modulesToServersName[@]}; t++ ))
  do
    finalMapForIBM+="[ "    
    finalMapForIBM+="\\\"${modulesToServersName[$t]}\\\" ${modulesToServersValues[$t]}"
    if [[ "${modulesToServersValues[$t]}" == *war ]]; 
    then 
      finalMapForIBM+=",WEB-INF/web.xml " 
      hostingMap+="[\\\"${modulesToServersName[$t]}\\\" ${modulesToServersValues[$t]},WEB-INF/web.xml default_host ]"
    else 
      finalMapForIBM+=",META-INF/ejb-jar.xml " 
    fi
    
    if [ "$CLUSTER" == "" ]
    then
      finalMapForIBM+="WebSphere:cell=$CELL,node=$NODE,server=$SERVER ]"
    else
      finalMapForIBM+="WebSphere:cell=$CELL,cluster=$CLUSTER ]"
    fi
  done
  finalMapForIBM+="]"
  if [ "$hostingMap" != "" ]; 
  then 
    finalMapForIBM+=" -MapWebModToVH ["
    finalMapForIBM+="$hostingMap"
    finalMapForIBM+="]"
  fi
    
  genericDeploy $3 "$EAR_REMOTE_DIR/${2}" "$finalMapForIBM"
}

deployKraz(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$KRAZ1 $NC"
  
  local  modulesToServersName=("$KRAZ4" "$KRAZ6" "$KRAZ8" "$KRAZ10")
  local  modulesToServersValues=("$KRAZ5" "$KRAZ7"  "$KRAZ9" "$KRAZ11")
  genericPreDeploy "$KRAZ1" "$KRAZ2" "$KRAZ3" modulesToServersName[@] modulesToServersValues[@]
}

deployKrazMock(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$KRAZ_MOCK_1 $NC"
  
  local  modulesToServersName=("$KRAZ_MOCK_4" "$KRAZ_MOCK_6")
  local  modulesToServersValues=("$KRAZ_MOCK_5" "$KRAZ_MOCK_7")
  genericPreDeploy "$KRAZ_MOCK_1" "$KRAZ_MOCK_2" "$KRAZ_MOCK_3" modulesToServersName[@] modulesToServersValues[@]
}

deployIntrastat(){  
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$INTR1 $NC"
   
  local  modulesToServersName=("$INTR4" "$INTR6"  "$INTR8")
  local  modulesToServersValues=("$INTR5" "$INTR7"  "$INTR9")
   
  genericPreDeploy "$INTR1" "$INTR2" "$INTR3" modulesToServersName[@] modulesToServersValues[@]
}

deployIntrastatMock(){  
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$INTR_MOCK_1 $NC"
  
  local  modulesToServersName=("$INTR_MOCK_4" "$INTR_MOCK_6")
  local  modulesToServersValues=("$INTR_MOCK_5" "$INTR_MOCK_7")
  genericPreDeploy "$INTR_MOCK_1" "$INTR_MOCK_2" "$INTR_MOCK_3" modulesToServersName[@] modulesToServersValues[@]
}

deployRegis(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$REGIS1 $NC"
   
  local  modulesToServersName=("$REGIS4" "$REGIS6" "$REGIS8" "$REGIS10")
  local  modulesToServersValues=("$REGIS5" "$REGIS7" "$REGIS9" "$REGIS11")
  genericPreDeploy "$REGIS1" "$REGIS2" "$REGIS3" modulesToServersName[@] modulesToServersValues[@]
}

deployZber(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$ZBELE $NC"
   
  local  modulesToServersName=("$ZBEM1" "$ZBEM2")
  local  modulesToServersValues=("$ZBEM1B" "$ZBEM2B")
  genericPreDeploy "$ZBELE" "$ZBEE" "$ZBE" modulesToServersName[@] modulesToServersValues[@]
}

deployZbd(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$ZBDLE $NC"
      
  local  modulesToServersName=("$ZBDM1" "$ZBDM2")
  local  modulesToServersValues=("$ZBDM1B" "$ZBDM2B")
  genericPreDeploy "$ZBDLE" "$ZBDE" "$ZBD" modulesToServersName[@] modulesToServersValues[@]
}

deployMetis(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$METLE $NC"
         
  local  modulesToServersName=("$METM1" "$METM2")
  local  modulesToServersValues=("$METM1B" "$METM2B")
  genericPreDeploy "$METLE" "$METE" "$MET" modulesToServersName[@] modulesToServersValues[@]
}

deployIAM(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$IAMLE $NC"
         
  local  modulesToServersName=("$IAMM1" "$IAMM2")
  local  modulesToServersValues=("$IAMM1B" "$IAMM2B")
  genericPreDeploy "$IAMLE" "$IAME" "$IAM" modulesToServersName[@] modulesToServersValues[@]
}

deployWS(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"   
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$DISLE $NC"
            
  local  modulesToServersName=("$DISM1")
  local  modulesToServersValues=("$DISM1B")
  genericPreDeploy "$DISLE" "$DISE" "$DIS" modulesToServersName[@] modulesToServersValues[@]
  
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$RGSLE $NC"
  local  modulesToServersName=("$RGSM1")
  local  modulesToServersValues=("$RGSM1B")
  genericPreDeploy "$RGSLE" "$RGSE" "$RGS" modulesToServersName[@] modulesToServersValues[@]
  
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$STSLE $NC"
  local  modulesToServersName=("$STSM1")
  local  modulesToServersValues=("$STSM1B")
  genericPreDeploy "$STSLE" "$STSE" "$STS" modulesToServersName[@] modulesToServersValues[@]
  
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$IAWLE $NC"
  local  modulesToServersName=("$IAWM2")
  local  modulesToServersValues=("$IAWM2B")
  genericPreDeploy "$IAWLE" "$IAWE" "$IAW" modulesToServersName[@] modulesToServersValues[@]
  
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$TMWLE $NC"
  local  modulesToServersName=("$TMWR1")
  local  modulesToServersValues=("$TMW1B")
  genericPreDeploy "$TMWLE" "$TMWE" "$TMW" modulesToServersName[@] modulesToServersValues[@]
}

deployLogapp(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL $LGALE $NC"
            
  local  modulesToServersName=("$LGAM1" "$LGAM2")
  local  modulesToServersValues=("$LGAM1B" "$LGAM2B")
  genericPreDeploy "$LGALE" "$LGAE" "$LGA" modulesToServersName[@] modulesToServersValues[@]
}

deployTaskapp(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$TAPLE $NC"
            
  local  modulesToServersName=("$TAPM1" "$TAPM2")
  local  modulesToServersValues=("$TAPM1B" "$TAPM2B")
  genericPreDeploy "$TAPLE" "$TAPE" "$TAP" modulesToServersName[@] modulesToServersValues[@]
}

deployScriptLang(){
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam Ear:$GREEN  $ISIS_DEVEL/$SCLLE $NC"
            
  local  modulesToServersName=("$SCLM1")
  local  modulesToServersValues=("$SCLM1B")
  genericPreDeploy "$SCLLE" "$SCLE" "$SCL" modulesToServersName[@] modulesToServersValues[@]
}

postDeploy(){
  # ulozenie konfiguracie
  echo "- SAVE CONFIG"
  ssh $HOST_USER@$HOST "$BIN/wsadmin.sh -lang jython -user $USER -password $PASS -c \"AdminConfig.save()\""
  # vymaz ear z tempu
  echo "- REMOVING OLD FILES"
  ssh $HOST_USER@$HOST "rm -fvr $EAR_REMOTE_DIR/*.ear"
}

deployWAR(){

  echo "- UPLOADING"
  echo -e "Deploy from $RED $SETUP_TYPE $NC"
  echo -e "Pouzivam war:$GREEN $1 $NC"
  scp $1 $HOST_USER@$HOST_PORTAL:$VIRTUAL_PORTAL/installableApps/ 
  
  echo -e "<request xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"PortalConfig_1.4.xsd\" type=\"update\" create-oids=\"true\">
	  <portal action=\"locate\">
	    <web-app action=\"update\" active=\"true\" uid=\"$2.webmod\">
	      <url>file:///\$server_root\$/installableApps/$3</url>
	      <portlet-app action=\"update\" active=\"true\" uid=\"$2\"></portlet-app>
	    </web-app>	
	  </portal>
	</request>" > tmpUpdate.xmlaccess
	
  scp tmpUpdate.xmlaccess $HOST_USER@$HOST_PORTAL:$VIRTUAL_PORTAL/installableApps/ 
  
  
  echo "- DEPLOY START"  
  ssh $HOST_USER@$HOST_PORTAL "$VIRTUAL_PORTAL/bin/xmlaccess.sh" -in "$VIRTUAL_PORTAL/installableApps/tmpUpdate.xmlaccess" -user $PORTAL_USER -pwd $PORTAL_PASS -url $WPS_ADMIN_URL -out "$VIRTUAL_PORTAL/installableApps/deploymentresults.xmlaccess"

  echo "- DEPLOY FINISHED"
  rm tmpUpdate.xmlaccess
}

deployMetisWAR(){

  WAR_PATH="$ISIS_DEVEL/Metis$BRANCH_SFX/Gui/target/MetisGuiProject-$SETUP_VERSION.war"
  APP_NAME="MetisGuiProject-$SETUP_VERSION.war"
  APP_MODULE="MetisApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME
}

deployZberWar(){

  WAR_PATH="$ISIS_DEVEL/Zber$BRANCH_SFX/Gui/target/ZberGuiProject-$SETUP_VERSION.war"
  APP_NAME="ZberGuiProject-$SETUP_VERSION.war"
  APP_MODULE="ZberApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME
}
deployZbdWar(){

  WAR_PATH="$ISIS_DEVEL/ZBD$BRANCH_SFX/Gui/target/ZBDGuiProject-$SETUP_VERSION.war"
  APP_NAME="ZBDGuiProject-$SETUP_VERSION.war"
  APP_MODULE="ZBDApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME

}
deployIamWar(){

  WAR_PATH="$ISIS_DEVEL/Iam$BRANCH_SFX/Gui/target/IamGuiProject-$SETUP_VERSION.war"
  APP_NAME="IamGuiProject-$SETUP_VERSION.war"
  APP_MODULE="IamApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME

}
deployLogAppWar(){

  WAR_PATH="$ISIS_DEVEL/LogApp$BRANCH_SFX/Gui/target/LogAppGuiProject-$SETUP_VERSION.war"
  APP_NAME="LogAppGuiProject-$SETUP_VERSION.war"
  APP_MODULE="LogApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME
}
deployIsisWar(){

  WAR_PATH="$ISIS_DEVEL/IsisCommon$BRANCH_SFX/IsisMenu/target/IsisMenuProject-$SETUP_VERSION.war"
  APP_NAME="IsisMenuGuiProject-$SETUP_VERSION.war"
  APP_MODULE="IsisMenuApp"
  
  deployWAR $WAR_PATH $APP_MODULE $APP_NAME
}

showDeployLog(){
  cat $DEPLOY_LOG | less
}
  
partialDeploy() {
  case $1 in
    a* ) deployMetis; 		partialDeploy $(echo $1|tr -d 'a') ;;
    b* ) deployZber; 		partialDeploy $(echo $1|tr -d 'b') ;;
    c* ) deployIAM; 		partialDeploy $(echo $1|tr -d 'c') ;;    
    d* ) deployTaskapp; 	partialDeploy $(echo $1|tr -d 'd') ;;
    e* ) deployLogapp; 		partialDeploy $(echo $1|tr -d 'e') ;;
    f* ) deployScriptLang; 	partialDeploy $(echo $1|tr -d 'f') ;;
    g* ) deployWS; 		partialDeploy $(echo $1|tr -d 'g') ;;
    h* ) deployZbd; 		partialDeploy $(echo $1|tr -d 'h') ;;
    i* ) deployRegis; 		partialDeploy $(echo $1|tr -d 'i') ;;
    jj* ) deployKrazMock; 	partialDeploy $(echo $1|tr -d 'jj') ;;
    j* ) deployKraz; 		partialDeploy $(echo $1|tr -d 'j') ;;
    kk* ) deployIntrastatMock; 	partialDeploy $(echo $1|tr -d 'kk') ;;
    k* ) deployIntrastat; 	partialDeploy $(echo $1|tr -d 'k') ;;    
    
    u* ) deployMetisWAR; 		partialDeploy $(echo $1|tr -d 'u') ;;    
    v* ) deployZberWar; 	partialDeploy $(echo $1|tr -d 'v') ;;
    w* ) deployZbdWar; 		partialDeploy $(echo $1|tr -d 'w') ;;
    x* ) deployIamWar; 		partialDeploy $(echo $1|tr -d 'x') ;;
    y* ) deployLogAppWar; 	partialDeploy $(echo $1|tr -d 'y') ;;
    z* ) deployIsisWar; 	partialDeploy $(echo $1|tr -d 'z') ;;

    0) clear; welcome ;;
    00) clear; exit ;;
    "")  ;;
    *) clear; echo "Chybne zadany vstup"; sleep 1; chooseDeploy ;;
  esac
}

deploy() {

  if [ $1 = "ALL" ]
  then
    deployMetisWAR
    deployZberWar
    deployIsisWar
    deployIamWar
    deployZbdWar
    deployLogAppWar
    deployIAM
    deployLogapp
    deployTaskapp
    deployWS
    deployZber
    deployZbd
    deployMetis
    deployScriptLang    
    deployKraz
    deployRegis
    postDeploy
  else
    partialDeploy $1
    postDeploy
  fi
  
  echo -e "$BLUE Stlac enter pre pokracovanie $NC"
  read
}

chooseDeploy() {
  echo "a. METIS 		b. ZBER	"
  echo "c. IAM			d. TASKAPP	"
  echo "e. LOGAPP		f. ScriptLang"
  echo "g. WebServices 	 	h. ZBD "
  echo "i. Regis		j. Kraz - jj.Mock "
  echo "k. Intrastat - kk. Mock "
  echo ""
  echo "u. METIS GUI		v. ZBER GUI"
  echo "w. ZBD GUI		x. IAM GUI"
  echo "y. LogApp GUI		z. ISIS Menu"
  echo "								0. back"
  echo "							       00. exit"
  echo -n "Vyber moznost(i): "
  read deployOption;

  deploy $deployOption "1" | tee $DEPLOY_LOG;
}
